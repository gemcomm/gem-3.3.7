!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r set_wind_tw_ad - ADJ of set_wind_tw_tl 
*
#include "model_macros_f.h"
*
      subroutine set_wind_tw_ad 
*
      implicit none
*
*author M.Tanguay 
*
*revision
* v3_35 - Tanguay M.    - initial MPI version
* v3_35 - Tanguay M.    - SETTLS option a la Ritchie/Girard 
*
*object
*     see id section
*	
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "vt1.cdk"
#include "vtw.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer pnerr, pnlkey1(100),pnlod
      integer i, j, k
*
*     ---------------------------------------------------------------
*
      pnlkey1(1)= VMM_KEY(utw  )
      pnlkey1(2)= VMM_KEY(vtw  )
      pnlkey1(3)= VMM_KEY(psdtw)
      pnlkey1(4)= VMM_KEY(ut1  )
      pnlkey1(5)= VMM_KEY(vt1  )
      pnlkey1(6)= VMM_KEY(psdt1)
*
      pnlod = 6 
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(utw  )
      pnerr = VMM_GET_VAR(vtw  )
      pnerr = VMM_GET_VAR(psdtw)
      pnerr = VMM_GET_VAR(ut1  )
      pnerr = VMM_GET_VAR(vt1  )
      pnerr = VMM_GET_VAR(psdt1)
*
      ut1  = utw   + ut1 
      vt1  = vtw   + vt1 
      psdt1= psdtw + psdt1 
*
      utw   = 0. 
      vtw   = 0. 
      psdtw = 0. 
*
      pnerr = vmmuld(-1,0)
*
*     ---------------------------------------------------------------
*
      return
      end
